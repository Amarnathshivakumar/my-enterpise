
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.EntitiesScalarFieldEnum = {
  id_entity: 'id_entity',
  name: 'name',
  type: 'type',
  description: 'description',
  number: 'number',
  size: 'size',
  logo_url: 'logo_url',
  active: 'active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProfilesScalarFieldEnum = {
  id_profile: 'id_profile',
  first_name: 'first_name',
  last_name: 'last_name',
  phone: 'phone',
  avatar_url: 'avatar_url',
  bio: 'bio',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.RolesScalarFieldEnum = {
  id_role: 'id_role',
  name: 'name',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SpotsScalarFieldEnum = {
  id_spot: 'id_spot',
  entity_id: 'entity_id',
  name: 'name',
  description: 'description',
  active: 'active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.TokensScalarFieldEnum = {
  id_token: 'id_token',
  user_id: 'user_id',
  r_token: 'r_token',
  access_token: 'access_token',
  exec_token: 'exec_token',
  revoked: 'revoked',
  expires_at: 'expires_at',
  status: 'status',
  active: 'active',
  created_at: 'created_at'
};

exports.Prisma.UsersScalarFieldEnum = {
  id_user: 'id_user',
  email: 'email',
  password: 'password',
  role_id: 'role_id',
  entity_id: 'entity_id',
  spot_id: 'spot_id',
  profile_id: 'profile_id',
  last_login_at: 'last_login_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.LogsScalarFieldEnum = {
  id_log: 'id_log',
  user_id: 'user_id',
  action: 'action',
  description: 'description',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.entitiesOrderByRelevanceFieldEnum = {
  name: 'name',
  type: 'type',
  description: 'description',
  number: 'number',
  size: 'size',
  logo_url: 'logo_url'
};

exports.Prisma.profilesOrderByRelevanceFieldEnum = {
  first_name: 'first_name',
  last_name: 'last_name',
  phone: 'phone',
  avatar_url: 'avatar_url',
  bio: 'bio'
};

exports.Prisma.rolesOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.spotsOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.tokensOrderByRelevanceFieldEnum = {
  r_token: 'r_token',
  access_token: 'access_token',
  exec_token: 'exec_token',
  status: 'status'
};

exports.Prisma.usersOrderByRelevanceFieldEnum = {
  email: 'email',
  password: 'password'
};

exports.Prisma.logsOrderByRelevanceFieldEnum = {
  action: 'action',
  description: 'description'
};


exports.Prisma.ModelName = {
  entities: 'entities',
  profiles: 'profiles',
  roles: 'roles',
  spots: 'spots',
  tokens: 'tokens',
  users: 'users',
  logs: 'logs'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/ds/Endpoint/VSCode/my-enterpise/backend/prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-1.1.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/ds/Endpoint/VSCode/my-enterpise/backend/prisma/schema1.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../.env",
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "..",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../prisma/client\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel entities {\n  id_entity   Int       @id @default(autoincrement())\n  name        String    @db.VarChar(255)\n  type        String    @db.VarChar(100)\n  description String?   @db.VarChar(255)\n  number      String?   @db.VarChar(50)\n  size        String?   @db.VarChar(50)\n  logo_url    String?   @db.VarChar(500)\n  active      Int       @default(1)\n  created_at  DateTime? @default(now()) @db.Timestamp(0)\n  updated_at  DateTime? @default(now()) @db.Timestamp(0)\n  spots       spots[]\n  users       users[]\n}\n\nmodel profiles {\n  id_profile Int       @id @default(autoincrement())\n  first_name String?   @db.VarChar(150)\n  last_name  String?   @db.VarChar(150)\n  phone      String?   @db.VarChar(50)\n  avatar_url String?   @db.VarChar(500)\n  bio        String?   @db.Text\n  created_at DateTime? @default(now()) @db.Timestamp(0)\n  updated_at DateTime? @default(now()) @db.Timestamp(0)\n  users      users[]\n}\n\nmodel roles {\n  id_role     Int       @id @default(autoincrement())\n  name        String    @unique @db.VarChar(50)\n  description String?   @db.VarChar(255)\n  created_at  DateTime? @default(now()) @db.Timestamp(0)\n  updated_at  DateTime? @default(now()) @db.Timestamp(0)\n  users       users[]\n}\n\nmodel spots {\n  id_spot     Int       @id @default(autoincrement())\n  entity_id   Int\n  name        String    @db.VarChar(200)\n  description String?   @db.VarChar(255)\n  active      Int       @default(1)\n  created_at  DateTime? @default(now()) @db.Timestamp(0)\n  updated_at  DateTime? @default(now()) @db.Timestamp(0)\n  entities    entities  @relation(fields: [entity_id], references: [id_entity], onDelete: Cascade)\n  users       users[]\n\n  @@index([entity_id])\n}\n\nmodel tokens {\n  id_token     Int       @id @default(autoincrement())\n  user_id      Int\n  r_token      String    @db.VarChar(512)\n  access_token String?   @db.VarChar(512)\n  exec_token   String?   @db.VarChar(512)\n  revoked      Int       @default(0)\n  expires_at   DateTime?\n  status       String?   @db.VarChar(50)\n  active       Int       @default(1)\n  created_at   DateTime? @default(now()) @db.Timestamp(0)\n  users        users     @relation(fields: [user_id], references: [id_user], onDelete: Cascade)\n\n  @@index([r_token(length: 191)])\n  @@index([user_id])\n}\n\nmodel users {\n  id_user       Int       @id @default(autoincrement())\n  email         String    @unique\n  password      String\n  role_id       Int\n  entity_id     Int\n  spot_id       Int?\n  profile_id    Int?\n  last_login_at DateTime?\n  created_at    DateTime? @default(now()) @db.Timestamp(0)\n  updated_at    DateTime? @default(now()) @db.Timestamp(0)\n  tokens        tokens[]\n  logs          logs[]\n  entities      entities  @relation(fields: [entity_id], references: [id_entity], onDelete: Cascade)\n  profiles      profiles? @relation(fields: [profile_id], references: [id_profile])\n  roles         roles     @relation(fields: [role_id], references: [id_role])\n  spots         spots?    @relation(fields: [spot_id], references: [id_spot])\n}\n\nmodel logs {\n  id_log      Int       @id @default(autoincrement())\n  user_id     Int?\n  action      String    @db.VarChar(50)\n  description String?\n  created_at  DateTime? @default(now()) @db.Timestamp(0)\n  users       users?    @relation(fields: [user_id], references: [id_user], onDelete: SetNull)\n}\n",
  "inlineSchemaHash": "96189e4ed408971aba7b0a15e1246feb5d4163df3b060591e0f2cf2a30988527",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"entities\":{\"fields\":[{\"name\":\"id_entity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logo_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"spots\",\"kind\":\"object\",\"type\":\"spots\",\"relationName\":\"entitiesTospots\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"entitiesTousers\"}],\"dbName\":null},\"profiles\":{\"fields\":[{\"name\":\"id_profile\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"first_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"last_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"profilesTousers\"}],\"dbName\":null},\"roles\":{\"fields\":[{\"name\":\"id_role\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"rolesTousers\"}],\"dbName\":null},\"spots\":{\"fields\":[{\"name\":\"id_spot\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"entity_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"entities\",\"kind\":\"object\",\"type\":\"entities\",\"relationName\":\"entitiesTospots\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"spotsTousers\"}],\"dbName\":null},\"tokens\":{\"fields\":[{\"name\":\"id_token\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"r_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"access_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"exec_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"revoked\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"tokensTousers\"}],\"dbName\":null},\"users\":{\"fields\":[{\"name\":\"id_user\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"entity_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"spot_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"profile_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"last_login_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"tokens\",\"kind\":\"object\",\"type\":\"tokens\",\"relationName\":\"tokensTousers\"},{\"name\":\"logs\",\"kind\":\"object\",\"type\":\"logs\",\"relationName\":\"logsTousers\"},{\"name\":\"entities\",\"kind\":\"object\",\"type\":\"entities\",\"relationName\":\"entitiesTousers\"},{\"name\":\"profiles\",\"kind\":\"object\",\"type\":\"profiles\",\"relationName\":\"profilesTousers\"},{\"name\":\"roles\",\"kind\":\"object\",\"type\":\"roles\",\"relationName\":\"rolesTousers\"},{\"name\":\"spots\",\"kind\":\"object\",\"type\":\"spots\",\"relationName\":\"spotsTousers\"}],\"dbName\":null},\"logs\":{\"fields\":[{\"name\":\"id_log\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"logsTousers\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

